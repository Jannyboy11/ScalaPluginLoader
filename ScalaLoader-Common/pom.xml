<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.janboerman.scalaloader</groupId>
        <artifactId>ScalaPluginLoader</artifactId>
        <version>0.18.15-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ScalaLoader-Common</artifactId>

    <properties>
        <bukkitVersion>1.20.4-R0.1-SNAPSHOT</bukkitVersion>
        <asmVersion>9.7.1</asmVersion>
        <bstatsVersion>3.0.0</bstatsVersion>
        <junitVersion>5.7.1</junitVersion>
        <mavenResolverVersion>1.6.2</mavenResolverVersion>
        <mavenResolverProviderVersion>3.8.1</mavenResolverProviderVersion>

        <java11.sourceDirectory>${project.basedir}/src/main/java11</java11.sourceDirectory>
        <java11.build.outputDirectory>${project.build.directory}/classes-java11</java11.build.outputDirectory>
    </properties>

    <pluginRepositories>
        <!-- for more recent versions of the maven-shade-plugin -->
        <pluginRepository>
            <id>apache-snapshots</id>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- compile for java 8 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>8</release>
                    <parameters>true</parameters>
                </configuration>
            </plugin>

			<!-- TODO try some better options for creating Multi-Release jar files -->
            <!-- TODO e.g.: https://www.baeldung.com/maven-multi-release-jars -->
            <!-- TODO or: http://www.russgold.net/sw/2018/04/easier-than-it-looks/ https://github.com/meterware/multirelease-parent (but requires a toolchains.xml) -->

            <!-- compile java 11 sources -->
            <!-- as described at: https://in.relation.to/2017/02/13/building-multi-release-jars-with-maven/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>compile-java11</id>
                        <phase>compile</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${java11.build.outputDirectory}" />
                                <javac srcdir="${java11.sourceDirectory}" destdir="${java11.build.outputDirectory}"
                                       classpath="${project.build.outputDirectory}" includeantruntime="false"
                                       release="11"/> <!-- how do we get maven dependencies on the classpath (or module-path) of this compiler invocation? -->
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- move java 11 classes to the correct output directory -->
            <!-- as described at: https://in.relation.to/2017/02/13/building-multi-release-jars-with-maven/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/META-INF/versions/11</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${java11.build.outputDirectory}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- define our automatic module name, and define the jar as Multi-Release -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Multi-Release>true</Multi-Release>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <minimizeJar>true</minimizeJar>
                            <createDependencyReducedPom>false</createDependencyReducedPom>

                            <relocations>
                                <relocation>
                                    <pattern>org.apache</pattern>
                                    <shadedPattern>xyz.janboerman.scalaloader.libs.apache</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.eclipse</pattern>
                                    <shadedPattern>xyz.janboerman.scalaloader.libs.eclipse</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.codehaus</pattern>
                                    <shadedPattern>xyz.janboerman.scalaloader.libs.codehaus</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.slf4j</pattern>
                                    <shadedPattern>xyz.janboerman.scalaloader.libs.slf4j</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.sonatype</pattern>
                                    <shadedPattern>xyz.janboerman.scalaloader.libs.sonatype</shadedPattern>
                                </relocation>
                            </relocations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.5.0</version>
                <configuration>
                    <!-- spigot api javadoc -->
                    <links>
                        <link>https://hub.spigotmc.org/javadocs/spigot/</link>
                    </links>

                    <!-- make the javadoc tool stop complain about unrecognised tags -->
                    <tags>
                        <tag>
                            <name>apiNote</name>
                            <placement>a</placement>
                            <head>API Note:</head>
                        </tag>
                        <tag>
                            <name>implNote</name>
                            <placement>a</placement>
                            <head>Implementation Note:</head>
                        </tag>
                        <tag>
                            <name>note</name>
                            <placement>a</placement>
                            <head>Note:</head>
                        </tag>
                    </tags>

                    <!-- only show protected and public stuff -->
                    <show>protected</show>

                    <!-- who needs help, anyway? -->
                    <nohelp>true</nohelp>

                    <!-- the javadoc tool is too picky for me -->
                    <failOnError>false</failOnError>

                    <!-- so that proper hyperlinks to standard jdk classes are generated -->
                    <additionalOptions>-source 21</additionalOptions>
                </configuration>

                <!-- I don't even get why this workaround is required.
                    Why is the javadoc plugin reading bytecode anyway?
                    link to the bugtracker: https://issues.apache.org/jira/projects/MJAVADOC/issues/MJAVADOC-542 -->
                <!-- keep this around for if the maven-javadoc-plugin starts acting weird again in the future: -->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>org.ow2.asm</groupId>-->
<!--                        <artifactId>asm</artifactId>-->
<!--                        <version>${asmVersion}</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>
        </plugins>

    </build>

    <repositories>
        <!-- Spigot repo -->
        <repository>
            <id>spigotmc-repo</id>
            <url>https://hub.spigotmc.org/nexus/content/groups/public/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <!-- depend on spigot-api instead of bukkit here because newer versions of bukkit aren't hosted on SpigotMC's maven -->
            <groupId>org.spigotmc</groupId>
            <artifactId>spigot-api</artifactId>
            <version>${bukkitVersion}</version>
            <scope>provided</scope>
        </dependency>

        <!-- needed for bytecode transformations & debugging functionality -->
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>${asmVersion}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-commons</artifactId>
            <version>${asmVersion}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-util</artifactId>
            <version>${asmVersion}</version>
            <scope>compile</scope>
        </dependency>

        <!-- this is not yet used -->
<!--        <dependency>-->
<!--            <groupId>org.ow2.asm</groupId>-->
<!--            <artifactId>asm-analysis</artifactId>-->
<!--            <version>${asmVersion}</version>-->
<!--            <scope>compile</scope>-->
<!--        </dependency>-->

        <!-- for debugging only -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala3-library_3</artifactId>
            <version>3.2.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.13.12</version>
            <scope>provided</scope>
        </dependency>

        <!-- stats! -->
        <dependency>
            <groupId>org.bstats</groupId>
            <artifactId>bstats-bukkit</artifactId>
            <version>${bstatsVersion}</version>
            <scope>compile</scope>
        </dependency>

        <!-- runtime library loading -->
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-resolver-provider</artifactId>
            <version>${mavenResolverProviderVersion}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.resolver</groupId>
            <artifactId>maven-resolver-connector-basic</artifactId>
            <version>${mavenResolverVersion}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.resolver</groupId>
            <artifactId>maven-resolver-transport-http</artifactId>
            <version>${mavenResolverVersion}</version>
            <scope>compile</scope>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junitVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junitVersion}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>