<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ScalaPluginLoader</artifactId>
        <groupId>xyz.janboerman</groupId>
        <version>0.13.11-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ScalaExample</artifactId>

    <properties>
        <scala.version>2.13.5</scala.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <recompileMode>incremental</recompileMode>
                    <useZincServer>true</useZincServer>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>testCompile</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
            javac won't compile a module.info because the "package xyz.janboerman.scalaloader.example.scala does not exist or is empty"!
            This is a bug because obviously it exists (albeit with only Scala sources).
            Best we can do for now is to wait for this bug getting patched, or Scala getting support for Java modules.

            This would be the module-info.java file:
            module xyz.janboerman.scalaloader.scalaexample {

                requires java.logging;
                requires org.bukkit;
                requires transitive scala.library;
                requires xyz.janboerman.scalaloader;

                exports xyz.janboerman.scalaloader.example.scala;
                opens xyz.janboerman.scalaloader.example.scala to org.bukkit;

            }

            So for now, as a workaround, keep using an automatic module.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Automatic-Module-Name>xyz.janboerman.scalaloader.scalaexample</Automatic-Module-Name>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

<!--            And this would be the java compiler plugin declaration-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--                <version>3.8.1</version>-->
<!--                <configuration>-->
<!--                    <release>15</release>-->
<!--                    <compilerArgs>&#45;&#45;enable-preview</compilerArgs>-->
<!--                </configuration>-->
<!--            </plugin>-->

        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spigotmc-repo</id>
            <url>https://hub.spigotmc.org/nexus/content/groups/public/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>xyz.janboerman</groupId>
            <artifactId>ScalaLoader</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.spigotmc</groupId>
            <artifactId>spigot-api</artifactId>
            <version>1.16.5-R0.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

</project>